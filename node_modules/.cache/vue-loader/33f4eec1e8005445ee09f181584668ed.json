{"remainingRequest":"/Users/xiexiaodong/Documents/website001/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/xiexiaodong/Documents/website001/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/xiexiaodong/Documents/website001/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/xiexiaodong/Documents/website001/src/App.vue?vue&type=template&id=7ba5bd90&","dependencies":[{"path":"/Users/xiexiaodong/Documents/website001/src/App.vue","mtime":1583934518964},{"path":"/Users/xiexiaodong/Documents/website001/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xiexiaodong/Documents/website001/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/xiexiaodong/Documents/website001/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xiexiaodong/Documents/website001/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}